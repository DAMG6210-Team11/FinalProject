
import java.awt.CardLayout;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author apple
 */
public class loginJpanel extends javax.swing.JPanel {

    /**
     * Creates new form loginJpanel
     */
    JPanel one;
    public loginJpanel(JPanel one) {
        
        initComponents();
          this.one =one;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLoginUser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEUserName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEPassword = new javax.swing.JPasswordField();

        btnLoginUser.setBackground(new java.awt.Color(242, 233, 174));
        btnLoginUser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnLoginUser.setText("LOGIN ");
        btnLoginUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginUserActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Username");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Password");

        txtEUserName.setBackground(new java.awt.Color(242, 233, 174));
        txtEUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEUserNameActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(204, 255, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("LOGIN PAGE");

        txtEPassword.setBackground(new java.awt.Color(242, 233, 174));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 171, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(txtEUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txtEPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 199, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(btnLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 199, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginUserActionPerformed

             String username = txtEUserName.getText(); // Get the username from the text field
    String password = new String(txtEPassword.getPassword()); // Get the password from the password field
    Connection conn = null;
    try {
        conn = JDBC.getConnection(); // Attempt to establish a connection
        if (conn != null) {
            // Assuming you have modified your login validation to also fetch the user_id
            CallableStatement cstmt = conn.prepareCall("{CALL dbo.ValidateLogin(?, ?, ?, ?, ?)}");
            cstmt.setString(1, username);
            cstmt.setString(2, password);
            cstmt.registerOutParameter(3, Types.BIT); // For @IsLoginValid
            cstmt.registerOutParameter(4, Types.VARCHAR); // For @UserType
            cstmt.registerOutParameter(5, Types.INTEGER); // Register @UserId as an output parameter

// Execute the CallableStatement
cstmt.execute();

            boolean isLoginValid = cstmt.getBoolean(3);
            String userType = cstmt.getString(4);
int userId = cstmt.getInt(5); // Fetch the user_id

            if (isLoginValid) {
                JOptionPane.showMessageDialog(this, "Login Successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                
                // Navigate to appropriate panel based on user type and pass userId
                switch (userType.toLowerCase()) {
                    case "owner":
                        JOptionPane.showMessageDialog(this, "Welcome back Owner " + username);
                        OwnerJPanel ownerPanel = new OwnerJPanel(one,username, userId); // Pass userId instead of username if required
                        one.add("OwnerJPanel", ownerPanel);
                        break;
                    case "renter":
                        JOptionPane.showMessageDialog(this, "Welcome back Renter " + username);
                        RenterJpanel renterPanel = new RenterJpanel(one,username, userId); // Pass userId instead of username if required
                        one.add("RenterJPanel", renterPanel);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Invalid user type", "Error", JOptionPane.ERROR_MESSAGE);
                        break;
                }
                CardLayout layout = (CardLayout) one.getLayout();
                layout.next(one);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username or Password", "Login Failed", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Database connection failed", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "SQL error occurred", "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        if (conn != null) try { conn.close(); } catch (SQLException e) { e.printStackTrace(); }
    }
    }//GEN-LAST:event_btnLoginUserActionPerformed

    private void txtEUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEUserNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoginUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField txtEPassword;
    private javax.swing.JTextField txtEUserName;
    // End of variables declaration//GEN-END:variables
}
